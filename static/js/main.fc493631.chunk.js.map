{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesAndIcons.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","DownIcon","style","src","data","icons","height","position","TitlesAndIcons","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","name","AboutSection","section","items","p","content","SkillCard","skill","image","alt","SkillSection","eachskill","Nav","color","backgroundColor","onClick","nav","App","changeTheme","setState","state","backgroundColor2","content2","snowColor","transform","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc493631.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\"\r\n\r\nexport default class Fullpage extends Component {\r\n    render() {\r\n        const { children } = this.props\r\n        return (\r\n            <div className={`fullpage ${this.props.className || ''}`}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport './DownIcon.css'\r\n\r\nexport default class DownIcon extends Component {\r\n    render() {\r\n        return (\r\n            <div style={this.props.style}>\r\n                <div className=\"drop\" >\r\n                    <img src={data.icons} style={{ height: \"40px\", position: \"absolute\" }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport './TitleAndIcons.css';\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from 'react-scroll';\r\n\r\nexport default class TitlesAndIcons extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage>\r\n                    <h1 className=\"title\">\r\n                        {data.title}\r\n                    </h1>\r\n                    <div>\r\n                        <h4>\r\n                            {data.subtitle}\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"icons-wrapper\">\r\n                        {\r\n                            Object.keys(data.links).map(key => {\r\n                                return (\r\n                                    <div className=\"icon\">\r\n                                        <SocialIcon url={data.links[key]} />\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </Fullpage>\r\n                <Link activeClass=\"active\" to=\"test1\" spy={true} smooth={true} offset={0} duration={500}>\r\n                    <DownIcon />\r\n                </Link>\r\n                <Element name=\"test1\" className=\"element\"></Element>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from \"../data.json\";\r\nimport './AboutSection.css';\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from 'react-scroll';\r\n\r\nexport default class AboutSection extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage>\r\n                    <h3>\r\n                        {data.section[0].title}\r\n                    </h3>\r\n                    <p>\r\n                        {data.section[0].items.map(p => <p> {\r\n                            p.content\r\n                        }</p>)}\r\n                    </p>\r\n                </Fullpage>\r\n                <Link activeClass=\"active\" to=\"test2\" spy={true} smooth={true} offset={0} duration={500}>\r\n                    <DownIcon />\r\n                </Link>\r\n                <Element name=\"test2\" className=\"element\"></Element>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./SkillCard.css\"\r\n\r\nexport default class SkillCard extends Component {\r\n    render() {\r\n        const { skill } = this.props;\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"image-wrapper\">\r\n                    <img src={skill.content.image} alt=\"\" />\r\n                </div>\r\n                <div className=\"skill-title\">\r\n                    <h4>{skill.content.title}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from \"../data.json\";\r\nimport SkillCard from '../components/SkillCard'\r\nimport './SkillSection.css';\r\n\r\nexport default class SkillSection extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage>\r\n                    <h3>\r\n                        {data.section[1].title}\r\n                    </h3>\r\n                    <div className=\"cards-wrapper\">\r\n                        {data.section[1].items.map(eachskill => {\r\n                            return (\r\n                                <SkillCard skill={eachskill} />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </Fullpage>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport data from '../data.json'\r\nimport './Nav.css'\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nexport default class Nav extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav style={{ color: this.props.style.color, backgroundColor: this.props.style.backgroundColor }}>\r\n                    <ul className=\"nav\">\r\n                        <li onClick={this.props.onClick}>{this.props.name}</li>\r\n                        <li>\r\n                            <Link activeClass=\"active\" to=\"test1\" spy={true} smooth={true} offset={0} duration={500} >\r\n                                <a>{data.nav.links[1].content}</a>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link activeClass=\"active\" to=\"test2\" spy={true} smooth={true} offset={0} duration={500} >\r\n                                <a>{data.nav.links[2].content}</a>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport TitlesAndIcons from './sections/TitlesAndIcons';\r\nimport AboutSection from './sections/AboutSection';\r\nimport SkillSection from './sections/SkillSection';\r\nimport Nav from '../src/components/Nav'\r\nimport SnowStorm from 'react-snowstorm';\r\nimport DownIcon from \"./components/DownIcon\";\r\nimport { Link, Element } from 'react-scroll';\r\nimport data from './data.json';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      color: \"#3498DB\",\r\n      backgroundColor: \"#fff\",\r\n      backgroundColor2: \"#eee\",\r\n      title: data.nav.links[0].content\r\n    }\r\n  }\r\n\r\n  changeTheme = () =>\r\n  this.setState({\r\n      color: this.state.color === \"#3498DB\" ? \"#fff\" : \"#3498DB\",\r\n      backgroundColor: this.state.backgroundColor === \"#fff\" ? \"#363537\" : \"#fff\",\r\n      backgroundColor2: this.state.backgroundColor2 === \"#eee\" ? \"#6B8096\" : \"#eee\",\r\n      title: this.state.title === data.nav.links[0].content ? data.nav.links[0].content2 : data.nav.links[0].content\r\n  })\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\" style={{ color: this.state.color, backgroundColor: this.state.backgroundColor }}>\r\n        <SnowStorm snowColor={this.state.color} />\r\n        <Element name=\"test3\" className=\"element\"></Element>\r\n        <Nav onClick={() => this.changeTheme()} name={this.state.title} style={{ color: this.state.color, backgroundColor: this.state.backgroundColor2 }} />\r\n        <TitlesAndIcons />\r\n        <AboutSection />\r\n        <SkillSection />\r\n        <Link activeClass=\"active\" to=\"test3\" spy={true} smooth={true} offset={0} duration={500}>\r\n          <DownIcon style={{ transform: \"rotate(180deg) transLateY(60px)\" }} />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}