{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesAndIcons.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","Component","render","children","this","props","React","createElement","className","concat","DownIcon","style","src","data","icons","height","position","TitlesAndIcons","title","subtitle","padding","size","href","resumeLink","Object","keys","links","map","key","SocialIcon","url","Link","activeClass","to","spy","smooth","offset","duration","Element","name","AboutSection","section","items","p","content","SkillCard","skill","backgroundColor","bgColor","image","alt","SkillSection","eachskill","theme","backgroundColor2","Nav","color","onClick","nav","App","constructor","super","changeTheme","setState","type","state","light","dark","SnowStorm","snowColor","FaMoon","FaSun","transform","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e319a106.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\"\r\n\r\nexport default class Fullpage extends Component {\r\n    render() {\r\n        const { children } = this.props\r\n        return (\r\n            <div className={`fullpage ${this.props.className || ''}`}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport './DownIcon.css'\r\n\r\nexport default class DownIcon extends Component {\r\n    render() {\r\n        return (\r\n            <div style={this.props.style}>\r\n                <div className=\"drop\" >\r\n                    <img src={data.icons} style={{ height: \"40px\", position: \"absolute\" }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport \"./TitleAndIcons.css\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nexport default class TitlesAndIcons extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage>\r\n          <h1 className=\"title\">{data.title}</h1>\r\n          <div>\r\n            <h4>{data.subtitle}</h4>\r\n          </div>\r\n          <div style={{ padding: 16 }}>\r\n              <button size=\"large\" href={data.resumeLink}>Resume</button>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map((key) => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"test1\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={0}\r\n          duration={500}\r\n        >\r\n          <DownIcon />\r\n        </Link>\r\n        <Element name=\"test1\" className=\"element\"></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from \"../data.json\";\r\nimport './AboutSection.css';\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from 'react-scroll';\r\n\r\nexport default class AboutSection extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage>\r\n                    <h3>\r\n                        {data.section[0].title}\r\n                    </h3>\r\n                    <p>\r\n                        {data.section[0].items.map(p => <p> {\r\n                            p.content\r\n                        }</p>)}\r\n                    </p>\r\n                </Fullpage>\r\n                <Link activeClass=\"active\" to=\"test2\" spy={true} smooth={true} offset={0} duration={500}>\r\n                    <DownIcon />\r\n                </Link>\r\n                <Element name=\"test2\" className=\"element\"></Element>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./SkillCard.css\";\r\n\r\nexport default class SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\" style={{ backgroundColor: this.props.bgColor }}>\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"skill-title\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from \"../data.json\";\r\nimport SkillCard from '../components/SkillCard'\r\nimport './SkillSection.css';\r\n\r\nexport default class SkillSection extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage>\r\n                    <h3>\r\n                        {data.section[1].title}\r\n                    </h3>\r\n                    <div className=\"cards-wrapper\">\r\n                        {data.section[1].items.map(eachskill => {\r\n                            return (\r\n                                <SkillCard skill={eachskill} bgColor={this.props.theme.backgroundColor2} />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </Fullpage>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport data from '../data.json'\r\nimport './Nav.css'\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nexport default class Nav extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav style={{ color: this.props.style.color, backgroundColor: this.props.style.backgroundColor }}>\r\n                    <ul className=\"nav\">\r\n                        <li onClick={this.props.onClick}>{this.props.name}</li>\r\n                        <li>\r\n                            <Link activeClass=\"active\" to=\"test1\" spy={true} smooth={true} offset={0} duration={500} >\r\n                                <a>{data.nav.links[0].content}</a>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link activeClass=\"active\" to=\"test2\" spy={true} smooth={true} offset={0} duration={500} >\r\n                                <a>{data.nav.links[1].content}</a>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport TitlesAndIcons from \"./sections/TitlesAndIcons\";\r\nimport AboutSection from \"./sections/AboutSection\";\r\nimport SkillSection from \"./sections/SkillSection\";\r\nimport Nav from \"../src/components/Nav\";\r\nimport SnowStorm from \"react-snowstorm\";\r\nimport DownIcon from \"./components/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport { FaSun, FaMoon } from \"react-icons/fa\";\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      theme: {\r\n        light: {\r\n          color: \"#769FCD\",\r\n          backgroundColor: \"#F7FBFC\",\r\n          backgroundColor2: \"#D6E6F2\",\r\n        },\r\n        dark: {\r\n          color: \"#fff\",\r\n          backgroundColor: \"#334257\",\r\n          backgroundColor2: \"#476072\",\r\n        },\r\n      },\r\n      type: \"light\",\r\n    };\r\n  }\r\n\r\n  changeTheme = () =>\r\n    this.setState({\r\n      type: this.state.type === \"light\" ? \"dark\" : \"light\",\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"App\"\r\n        style={{\r\n          color: this.state.theme[this.state.type].color,\r\n          backgroundColor: this.state.theme[this.state.type].backgroundColor,\r\n        }}\r\n      >\r\n        <SnowStorm\r\n          snowColor={this.state.theme[this.state.type].color}\r\n          key={this.state.theme[this.state.type].color}\r\n        />\r\n        <Element name=\"test3\" className=\"element\"></Element>\r\n        <Nav\r\n          onClick={() => this.changeTheme()}\r\n          name={this.state.type === \"light\" ? <FaMoon /> : <FaSun />}\r\n          style={{\r\n            color: this.state.theme[this.state.type].color,\r\n            backgroundColor: this.state.theme[this.state.type].backgroundColor2,\r\n          }}\r\n        />\r\n        <TitlesAndIcons theme={this.state.theme[this.state.type]} />\r\n        <AboutSection />\r\n        <SkillSection theme={this.state.theme[this.state.type]} />\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"test3\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={0}\r\n          duration={500}\r\n        >\r\n          <DownIcon style={{ transform: \"rotate(180deg) transLateY(60px)\" }} />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}